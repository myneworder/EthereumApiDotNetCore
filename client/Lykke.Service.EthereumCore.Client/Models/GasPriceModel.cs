// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.EthereumCore.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class GasPriceModel
    {
        /// <summary>
        /// Initializes a new instance of the GasPriceModel class.
        /// </summary>
        public GasPriceModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GasPriceModel class.
        /// </summary>
        public GasPriceModel(string max, string min)
        {
            Max = max;
            Min = min;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "max")]
        public string Max { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "min")]
        public string Min { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Max == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Max");
            }
            if (Min == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Min");
            }
            if (Max != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(Max, "^[1-9][0-9]*$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "Max", "^[1-9][0-9]*$");
                }
            }
            if (Min != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(Min, "^[1-9][0-9]*$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "Min", "^[1-9][0-9]*$");
                }
            }
        }
    }
}
